/* ************************************************************************** */
/*                                                                            */
/*                                                        ::::::::            */
/*   mini_gnl.c                                         :+:    :+:            */
/*                                                     +:+                    */
/*   By: limartin <limartin@student.codam.nl>         +#+                     */
/*                                                   +#+                      */
/*   Created: 2022/12/02 18:52:56 by limartin      #+#    #+#                 */
/*   Updated: 2022/12/02 19:40:51 by limartin      ########   odam.nl         */
/*                                                                            */
/* ************************************************************************** */

#include "so_long.h"

/* The most horrendously inefficient GNL you'll ever see <3 */
char	*mini_gnl(int fd)
{
	char		*ret;
	char		*ret_plus_one;
	int			chars_read;
	int			i;

	ret = ft_safe_malloc(sizeof(char) * 1);
	ret[0] = '\0';
	while (1)
	{
		ret_plus_one = (char *)ft_safe_malloc(ft_strlen(ret) + 2);
		i = 0;
		while (i < ft_strlen(ret))
		{
			ret_plus_one[i] = ret[i];
			i++;
		}
		ret_plus_one[i + 1] = '\0';
		chars_read = read(fd, &ret_plus_one[i], 1);
		if (chars_read <= 0)
		{
			free(ret);
			free(ret_plus_one);
			return (NULL);
		}
		if (ret_plus_one[i] == '\n')
		{
			free(ret_plus_one);
			break ;
		}
		free(ret);
		ret = ret_plus_one;
	}
	return (ret);
}
